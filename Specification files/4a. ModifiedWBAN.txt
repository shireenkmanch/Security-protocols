//----------------------------------------------------------------------------------------------------------------
//
//   Data Communication Protocol for WBAN - Modified
//   *************************************************
//  “ Secure and Efficient Data Communication
//    Protocol for Wireless Body Area Networks “, 2016
// 
//----------------------------------------------------------------------------------------------------------------
//   Author: Shireen Kudukkil Manchingal
//   Date: 30 August 2017



// PROTOCOL SPECIFICATION
// ***********************
// S : Sensor
// D : Doctor
// DS : Data Sink
// Ksd : Random access token chosen by sensor
// Ksd1 : Shared secret between doctor and sensor
// KdPub : Public parameter generated by KGC to doctor
// KdPriv : Secret key distributed by KGC to doctor
// KsPub : Public parameter generated by KGC to sensor
// KsPriv : Secret key distributed by KGC to sensor
// TSs : Timestamp
// TSd : Timestamp of DS
// idD : ID of doctor
// idS : ID of sensor
// instruc : Instructions sent by doctor to sensor
// message : Data sent by sensor to doctor


// 1. 		Sensor : Ktdate = Ksd||TSs
//		Sensor : H = Hash(Ktdate)
//    Sensor -> Data Sink : idS, {{Ktdate}KdPub, H(Ktdate)}KsPriv
// 2. Data Sink -> Doctor : idS, {Ktdate}KdPub, TSd
// 		Doctor : {{Ktdate}KdPub} = {{Ktdate}KdPub}KdPriv = Ktdate
// 3. Doctor -> Sensor : idD, H(Ktdate)
//		Sensor : If H1 = H(Ktdate), Ktdate1 = Ksd1||TSs
//		Sensor : H2 = H(Ktdate1)
// 4. Sensor -> Data Sink : idS, {{Ktdate1}KdPub, H(Ktdate1)}KsPriv
// 5. Sensor -> Doctor : idS, {{Ktdate1}KdPub}KsPriv
// 		Doctor : {{{Ktdate1}KdPub}KsPriv}KsPub = {{Ktdate1}KdPub}KdPriv = Ktdate1
// 6. Doctor -> Sensor : idD, H(Ktdate1)
//		Sensor : If H2 = H(Ktdate1), continue
// 7. Doctor -> Sensor : {idD, idS, {instruc}Ksd1, H(Ksd1, instruc, idS)}KdPriv
//		Sensor : {{{instruc}Ksd1}KdPriv}KdPub = {{instruc}Ksd1}Ksd1 = instruc
//		Sensor : Computes H'(Ksd1, instruc, idS). If equal to H(Ksd1, instruc, idS),
//			 message integrity is proved.
// 8. Sensor -> Doctor : {idS, idD, {message}Ksd1}KsPriv




//-----------------------------------------------------------------------------------------------------------------



// 1.Initial AssumptioKsd
// **********************
// a.Express sensor's possessions/knowledge at time t0
A1: S possess at[0] Ksd;
A2: S possess at[0] Ksd1;
A3: S possess at[0] idS;
A4: S possess at[0] KsPub;
A5: S possess at[0] KsPriv;
A6: S possess at[0] message;
A7: S possess at[0] KdPub;
A8: S possess at[0] TSs;
A9: S know at[0] D possess at[0] idD;
A10: S know at[0] D possess at[0] KdPriv;
A11: S know at[0] not(Zero possess at[0] KsPriv);
A12: S know at[0] not(Zero possess at[0] Ksd);
A13: S know at[0] not(Zero possess at[0] Ksd1);
A14: S know at[0] not(Zero possess at[0] TSs);


// b.Express Doctor's possessions/knowledge at time t0
A15: D possess at[0] idD;
A16: D possess at[0] KdPub;
A17: D possess at[0] KdPriv;
A18: D possess at[0] instruc;
A19: D possess at[0] KsPub;
A20: D know at[0] S possess at[0] Ksd;
A21: D know at[0] S possess at[0] Ksd1;
A22: D know at[0] S possess at[0] KsPriv;
A23: D know at[0] DS possess at[0] TSd;
A24: D know at[0] not(Zero possess at[0] KdPriv);
A25: D know at[0] not(Zero possess at[0] Ksd);
A26: D know at[0] not(Zero possess at[0] Ksd1);
A27: D know at[0] not(Zero possess at[0] TSd);


// b.Express Data Sink's possessions/knowledge at time t0
A28: DS possess at[0] KdPub;
A29: DS possess at[0] KsPub;
A30: DS possess at[0] TSd;
A31: DS know at[0] D possess at[0] KdPriv;
A32: DS know at[0] S possess at[0] KsPriv;
A33: DS know at[0] not(Zero possess at[0] TSd);
A34: DS know at[0] not(Zero possess at[0] TSs);
A35: DS know at[0] not(Zero possess at[0] Ksd);
A36: DS know at[0] not(Zero possess at[0] Ksd1);
A37: D know at[0] (((D receivefrom DS at[2] idS, {Ksd,TSs}KdPub, TSd AND DS possess at[0] TSd) AND DS know at[0] not(Zero possess at[0] TSd)) IMPLY (DS send at[2] idS, {Ksd,TSs}KdPub, TSd));



// 2.Protocol Steps
// *****************
// a. Communication Establishment Phase
S1: DS receivefrom S at[1] {idS, {Ksd,TSs}KdPub, H(Ksd,TSs)}KsPriv;
S2: D receivefrom DS at[2] idS, {Ksd,TSs}KdPub, TSd;
S3: S receivefrom D at[3] {idD, H(Ksd,TSs)}KdPriv;
S4: DS receivefrom S at[4] {idS, {Ksd1,TSs}KdPub, H(Ksd1,TSs)}KsPriv;
S5: D receivefrom S at[5] {idS, {Ksd1,TSs}KdPub}KsPriv;
S6: S receivefrom D at[6] {idD, H(Ksd1,TSs)}KdPriv;

//b. Communication Phase
S7: S receivefrom D at[7] {idD, idS, {instruc}Ksd1, H(Ksd1, instruc, idS)}KdPriv;
S8: D receivefrom S at[8] {idS, idD, {message}Ksd1}KsPriv;




// 3.Protocol Goals
// *****************
G1: DS possess at[1] idS;
G2: DS possess at[1] {Ksd,TSs}KdPub;
G3: DS possess at[1] H(Ksd,TSs);
G4: DS know at[1] S send at[1] {idS, {Ksd,TSs}KdPub, H(Ksd,TSs)}KsPriv;
G5: DS know at[1] not(Zero possess at[0] {idS, {Ksd,TSs}KdPub, H(Ksd,TSs)}KsPriv);
G6: D possess at[2] idS;
G7: D possess at[2] Ksd;
G8: D possess at[2] TSs;
G9: D possess at[2] TSd;
G10: D know at[2] S possess at[2] Ksd;
G11: D know at[2] DS send at[2] idS, {Ksd,TSs}KdPub, TSd;
G12: D know at[2] not(Zero possess at[0] idS, {Ksd,TSs}KdPub, TSd);
G13: S possess at[3] idD;
G14: S possess at[3] H(Ksd,TSs);
G15: S know at[3] D send at[3] {idD, H(Ksd,TSs)}KdPriv;
G16: S know at[3] not(Zero possess at[0] {idD, H(Ksd,TSs)}KdPriv);
G17: DS possess at[4] idS;
G18: DS possess at[4] {Ksd1,TSs}KdPub;
G19: DS possess at[4] H(Ksd1,TSs);
G20: DS know at[4] S send at[4] {idS, {Ksd1,TSs}KdPub, H(Ksd1,TSs)}KsPriv;
G21: DS know at[4] not(Zero possess at[0] {idS, {Ksd1,TSs}KdPub, H(Ksd1,TSs)}KsPriv);
G22: D possess at[5] idS;
G23: D possess at[5] Ksd1;
G24: D possess at[5] TSs;
G25: D know at[5] S possess at[5] Ksd1;
G26: D know at[5] S send at[5] {idS, {Ksd1,TSs}KdPub}KsPriv;
G27: D know at[5] not(Zero possess at[0] {idS, {Ksd1,TSs}KdPub}KsPriv);
G28: S possess at[6] idD;
G29: S possess at[6] H(Ksd1,TSs);
G30: S know at[6] D send at[6] {idD, H(Ksd1,TSs)}KdPriv; 
G31: S know at[6] not(Zero possess at[0] {idD, H(Ksd1,TSs)}KdPriv);
G32: S possess at[7] instruc;
G33: S possess at[7] H(Ksd1, instruc, idS);
G34: S know at[7] D send at[7] {idD, idS, {instruc}Ksd1, H(Ksd1, instruc, idS)}KdPriv;
G35: S know at[7] not(Zero possess at[0] {idD, idS, {instruc}Ksd1, H(Ksd1, instruc, idS)}KdPriv);
G36: D possess at[8] message;
G37: D know at[8] S send at[8] {idS, idD, {message}Ksd1}KsPriv;
G38: D know at[8] not(Zero possess at[0] {idS, idD, {message}Ksd1}KsPriv);


